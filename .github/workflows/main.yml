name: Build TemporalDenoiser

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-macos:
    runs-on: macos-13
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          /usr/local/bin/pip3 install --upgrade pip
          /usr/local/bin/pip3 install -r requirements.txt
          /usr/local/bin/pip3 install PyInstaller==5.13.0
          /usr/local/bin/pip3 install rawpy==0.18.0 --no-binary :all:
          /usr/local/bin/pip3 install tifffile>=2022.10.10 --no-binary :all:
          /usr/local/bin/pip3 install PySide6==6.5.0
          /usr/local/bin/pip3 install opencv-python==4.7.0.72
          /usr/local/bin/pip3 install numpy==1.24.3
          /usr/local/bin/pip3 install scipy==1.10.1
          /usr/local/bin/pip3 install imageio==2.28.1

      - name: Debug rawpy and tifffile installation
        run: |
          echo "Listing rawpy directory contents:"
          ls -R /Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/rawpy || echo "rawpy directory not found"
          echo "Checking for libraw:"
          ls -l /Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/rawpy/libraw || echo "libraw directory not found"
          echo "Listing tifffile directory contents:"
          ls -R /Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/tifffile || echo "tifffile directory not found"

      - name: Debug cinemadng.py
        run: |
          echo "Contents of cinemadng.py:"
          cat temporal_denoiser/cinemadng.py || echo "cinemadng.py not found"

      - name: Build with PyInstaller
        run: |
          /usr/local/bin/pyinstaller --log-level DEBUG -F -n TemporalDenoiser --windowed --icon=temporal_denoiser/resources/app_icon.icns TemporalDenoiser.spec

      - name: Inspect app bundle
        run: |
          ls -R dist/TemporalDenoiser.app/Contents/Resources
          ls -l dist/TemporalDenoiser.app/Contents/MacOS

      - name: Install create-dmg
        run: brew install create-dmg

      - name: Create DMG
        run: |
          mkdir -p dist_dmg
          APP_PATH="dist/TemporalDenoiser.app"
          DMG_NAME="TemporalDenoiser-$(date +'%Y%m%d').dmg"
          hdiutil create -volname "TemporalDenoiser" \
                         -srcfolder "$APP_PATH" \
                         -ov -format UDZO "dist_dmg/$DMG_NAME"

      - name: Upload DMG artifact
        uses: actions/upload-artifact@v4
        with:
          name: TemporalDenoiser-dmg
          path: dist_dmg/*.dmg
