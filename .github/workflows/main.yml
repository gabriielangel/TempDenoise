name: Build TemporalDenoiser

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-macos:
    runs-on: macos-13
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: 'pip'  # Cache pip dependencies for faster builds

      - name: Install Homebrew and gfortran
        run: |
          /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
          brew install gfortran

      - name: Install dependencies
        run: |
          python3.10 -m pip install --upgrade pip
          python3.10 -m pip install -r requirements.txt

      - name: Debug rawpy and tifffile installation
        run: |
          echo "Listing rawpy directory contents:"
          ls -R /Users/runner/hostedtoolcache/Python/3.10.18/x64/lib/python3.10/site-packages/rawpy || echo "rawpy directory not found"
          echo "Checking for libraw:"
          ls -l /Users/runner/hostedtoolcache/Python/3.10.18/x64/lib/python3.10/site-packages/rawpy/libraw || echo "libraw directory not found"
          echo "Listing tifffile directory contents:"
          ls -R /Users/runner/hostedtoolcache/Python/3.10.18/x64/lib/python3.10/site-packages/tifffile || echo "tifffile directory not found"

      - name: Debug cinemadng.py
        run: |
          echo "Contents of cinemadng.py:"
          cat temporal_denoiser/cinemadng.py || echo "cinemadng.py not found"

      - name: Build with PyInstaller
        env:
          PYTHONPATH: /Users/runner/hostedtoolcache/Python/3.10.18/x64/lib/python3.10/site-packages
          LD_LIBRARY_PATH: /Users/runner/hostedtoolcache/Python/3.10.18/x64/lib
        run: |
          python3.10 -m PyInstaller --log-level DEBUG TemporalDenoiser.spec

      - name: Inspect app bundle
        run: |
          ls -R dist/TemporalDenoiser.app/Contents/Resources
          ls -l dist/TemporalDenoiser.app/Contents/MacOS

      - name: Install create-dmg
        run: brew install create-dmg

      - name: Create DMG
        run: |
          mkdir -p dist_dmg
          APP_PATH="dist/TemporalDenoiser.app"
          DMG_NAME="TemporalDenoiser-$(date +'%Y%m%d').dmg"
          hdiutil create -volname "TemporalDenoiser" \
                         -srcfolder "$APP_PATH" \
                         -ov -format UDZO "dist_dmg/$DMG_NAME"

      - name: Upload DMG artifact
        uses: actions/upload-artifact@v4
        with:
          name: TemporalDenoiser-dmg
          path: dist_dmg/*.dmg
